plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = project.minecraftVersion
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven { url "https://libraries.minecraft.net/" }

        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven'
            url = 'https://maven.blamejared.com'
        }

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }

        maven {
            url = "https://jitpack.io"
        }
        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.dev"
        }
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
        maven {
            name = 'Kotlin for Forge'
            url = 'https://thedarkcolour.github.io/KotlinForForge/'
            content { includeGroup "thedarkcolour" }
        }
        maven { url "https://maven.shedaniel.me/" }
        maven {
            name = "Ladysnake Mods"
            url = 'https://maven.ladysnake.org/releases'
        }
        maven {
            name "entity reach"
            url "https://maven.jamieswhiteshirt.com/libs-release/"
        }
        maven { url "https://mvn.devos.one/snapshots/" }
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
        maven {
            url 'https://repo.sleeping.town'
            content {
                includeGroup 'com.unascribed'
            }
        }

        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraftVersion"
        mappings loom.officialMojangMappings()
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()



    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }


        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}
